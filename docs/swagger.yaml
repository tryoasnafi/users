basePath: /api
definitions:
  internal_users.CreateUserRequest:
    properties:
      address:
        type: string
      dob:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      username:
        type: string
    required:
    - address
    - dob
    - email
    - first_name
    - last_name
    - phone_number
    - username
    type: object
  internal_users.MessageResponse:
    properties:
      message:
        type: string
    type: object
  internal_users.UpdateUserRequest:
    properties:
      address:
        type: string
      dob:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    required:
    - address
    - dob
    - email
    - first_name
    - last_name
    - phone_number
    type: object
  internal_users.UserResponse:
    properties:
      address:
        type: string
      dob:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      phone_number:
        type: string
    type: object
host: localhost:9090
info:
  contact: {}
  description: This is a user details service API.
  title: User Details Service API
  version: "1.0"
paths:
  /v1/users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/internal_users.UserResponse'
            type: array
      summary: return all users in database
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_users.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_users.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_users.MessageResponse'
      summary: create new user in the service
      tags:
      - users
  /v1/users/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_users.UserResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_users.MessageResponse'
      summary: get user by given id
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: New User Details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_users.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_users.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_users.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_users.MessageResponse'
      summary: update user details with given id
      tags:
      - users
swagger: "2.0"
